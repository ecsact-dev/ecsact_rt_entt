name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  linter:
    name: C/C++ Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: 'bazel --bazelrc=.bazelrc --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc build //... -k'
      - run: 'bazel --bazelrc=.bazelrc --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc run @hedron_compile_commands//:refresh_all'
      - uses: cpp-linter/cpp-linter-action@77982d55693d154611fbb8b1304a447c44ae6f2d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file
          version: 16
          files-changed-only: false

  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            /Users/runneradmin/AppData/Local/bazelisk
            /Users/runneradmin/.cache/bazel-disk-cache
          key: ${{runner.os}}-bazel-cache
      - uses: actions/checkout@v3
      - run: bazel  --bazelrc=.bazelrc --bazelrc=.github/workflows/ci-windows.bazelrc test //...
  test-linux:
    runs-on: ubuntu-latest
    depends-on: linter
    steps:
      - uses: actions/checkout@v3
      - name: Mount bazel caches
        uses: actions/cache@v3
        with:
          path: |
            "~/.cache/bazel"
            "~/.cache/bazel-repo"
          key: bazel-cache-${{ hashFiles('**/BUILD.bazel', '**/*.bzl', 'WORKSPACE') }}
          restore-keys: bazel-cache-
      - name: bazel test //...
        env:
          # Bazelisk will download bazel to here, ensure it is cached between runs.
          XDG_CACHE_HOME: ~/.cache/bazel-repo
        run: bazel --bazelrc=.bazelrc --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc test //...
