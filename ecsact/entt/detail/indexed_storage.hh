#pragma once

#include <vector>
#include "codegen_error.hh"
#include "ecsact/entt/detail/registry.hh"
#include "ecsact/entt/detail/assoc_fields_hash.hh"
#include "ecsact/entt/detail/codegen_error.hh"

namespace ecsact::entt::detail {

template<typename C>
struct multi_storage {
	std::vector<assoc_hash_value_t> storage_hash_value_ids;
};

template<typename C>
auto update_indexed_storage(ecsact::entt::registry_t& registry) -> void {
	static_assert(detail::unimplemented_by_codegen<C>, R"(
 -----------------------------------------------------------------------------
| (!) CODEGEN ERROR                                                           |
| `update_indexed_storage<>` template specialization cannot be found. This is |
| typically generated by ecsact_rt_entt_codegen.                              |
 -----------------------------------------------------------------------------
)");
}
} // namespace ecsact::entt::detail
